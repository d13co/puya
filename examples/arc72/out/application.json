{
    "hints": {
        "arc72_ownerOf(uint256)address": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "arc72_transferFrom(address,address,uint256)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "arc72_tokenURI(uint256)byte[256]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "arc72_approve(address,uint256)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "mint(address)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "arc72_setApprovalForAll(address,bool)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "arc72_totalSupply()uint256": {
            "read_only": true,
            "call_config": {
                "no_op": "CALL"
            }
        },
        "arc72_tokenByIndex(uint256)uint256": {
            "read_only": true,
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKCi8vIGV4YW1wbGVzLmFyYzcyLmNvbnRyYWN0LkFSQzcyQ29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbl9ibG9ja0AwOgogICAgICAgIGludCAxCiAgICAgICAgcmV0dXJuCgo="
    },
    "state": {
        "global": {
            "num_byte_slices": 1,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "next_index": {
                    "type": "bytes",
                    "key": "next_index"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "ARC72Contract",
        "methods": [
            {
                "name": "arc72_ownerOf",
                "args": [
                    {
                        "type": "uint256",
                        "name": "token_id"
                    }
                ],
                "returns": {
                    "type": "address"
                }
            },
            {
                "name": "arc72_transferFrom",
                "args": [
                    {
                        "type": "address",
                        "name": "from_address"
                    },
                    {
                        "type": "address",
                        "name": "to_address"
                    },
                    {
                        "type": "uint256",
                        "name": "token_id"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "arc72_tokenURI",
                "args": [
                    {
                        "type": "uint256",
                        "name": "token_id"
                    }
                ],
                "returns": {
                    "type": "byte[256]"
                }
            },
            {
                "name": "arc72_approve",
                "args": [
                    {
                        "type": "address",
                        "name": "operator"
                    },
                    {
                        "type": "uint256",
                        "name": "token_id"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "mint",
                "args": [
                    {
                        "type": "address",
                        "name": "to"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "arc72_setApprovalForAll",
                "args": [
                    {
                        "type": "address",
                        "name": "operator"
                    },
                    {
                        "type": "bool",
                        "name": "approved"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "arc72_totalSupply",
                "args": [],
                "returns": {
                    "type": "uint256"
                }
            },
            {
                "name": "arc72_tokenByIndex",
                "args": [
                    {
                        "type": "uint256",
                        "name": "index"
                    }
                ],
                "returns": {
                    "type": "uint256"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}